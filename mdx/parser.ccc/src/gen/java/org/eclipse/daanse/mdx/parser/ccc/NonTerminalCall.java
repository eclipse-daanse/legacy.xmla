/* Generated by: CongoCC Parser Generator. NonTerminalCall.java
*
* Copyright (c) 2023 Contributors to the Eclipse Foundation.
*
* This program and the accompanying materials are made
* available under the terms of the Eclipse Public License 2.0
* which is available at https://www.eclipse.org/legal/epl-2.0/
*
* SPDX-License-Identifier: EPL-2.0
*
* Contributors: see corresponding .ccc file
*/
package org.eclipse.daanse.mdx.parser.ccc;

import java.io.PrintStream;
import java.util.Set;


public class NonTerminalCall {
    final TokenSource lexer;
    final String sourceFile;
    public final String productionName;
    final String parserClassName;
    final int line, column;
    final Set<? extends Node.NodeType> followSet;

    public NonTerminalCall(String parserClassName, TokenSource lexer, String sourceFile, String productionName, int line, int column, Set<? extends Node.NodeType> followSet) {
        this.parserClassName = parserClassName;
        this.lexer = lexer;
        this.sourceFile = sourceFile;
        this.productionName = productionName;
        this.line = line;
        this.column = column;
        this.followSet = followSet;
    }

    final TokenSource getTokenSource() {
        return lexer;
    }

    StackTraceElement createStackTraceElement() {
        return new StackTraceElement("MdxParser", productionName, sourceFile, line);
    }

    public void dump(PrintStream ps) {
        ps.println(productionName + ":" + line + ":" + column);
    }

}


