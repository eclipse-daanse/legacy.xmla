name: Java CI with Maven

on:
  push:
    branches: [ main , snapshot ]
  pull_request:
    branches: [ main , snapshot ]

jobs:
  build:
    name: Artifacts
    runs-on: self-hosted
    timeout-minutes: 500
    outputs:
      matrix: ${{ steps.listtest.outputs.matrix }}
    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven
    - name: Build with Maven
      run: mvn -DtempIgnoreStrageTests=true -Dbnd.testing.failure.ignore=true -B verify --file pom.xml -U
    - name: Upload artifact
      uses: actions/upload-artifact@v3
      if: always() # always run even if the previous step fails
      with:
        name: my-artifact
        path: |
          **/TEST-*.xml
    - name: JUnit Report Action
      uses: mikepenz/action-junit-report@v3.5.2
      if: always() # always run even if the previous step fails
      with:
        report_paths: '**/target/test-reports/**/TEST-*.xml'
#    - name: Upload Build-Result-Artifact
#      uses: actions/upload-artifact@v3
#      with:
#        name: Build-Result-Artifact
#        if-no-files-found: error
#        path: |
#          **/target/*.jar
#          !**/target/classes/*
#          !**/target/test-classes/*
#          !**/target/tmp/*
#          !**/target/javacc.jar
#          !**/src/generated/*
#          !**/src/it/*
#          !**/src/main/*
#          !**/src/site/*
#          !**/src/test/*
#          !.git/*
#          !foo.bar.foo
    - name: List TCK
      id: listtest
      run: |
        json=$(.github/matrixgen.sh | tr -d '\n')
        echo "::set-output name=matrix::${json}"

#    # Optional: Uploads the full dependency graph to GitHub to improve the quality of Dependabot alerts this repository can receive
#    - name: Update dependency graph
#      continue-on-error: true
#      uses: advanced-security/maven-dependency-submission-action@v2.0.1
#
#  tck:
#    permissions:
#      contents: none
#    needs: build
#    strategy:
#      fail-fast: false
#      matrix: ${{ fromJSON(needs.build.outputs.matrix) }}
#    name: TCK ${{ matrix.tck }}
#    runs-on: self-hosted
#    steps:
#    - uses: actions/checkout@v3
#    - name: Set up Java
#      uses: actions/setup-java@v3
#      with:
#        distribution: 'temurin'
#        java-version: 17
#    - name: Download Build-Result-Artifact
#      uses: actions/download-artifact@v3
#      with:
#        name: Build-Result-Artifact
#    - name: Set up JDK 17 for tck
#      uses: actions/setup-java@v3
#      with:
#        java-version: '17'
#        distribution: 'temurin'
#        cache: maven
#    - name: run tck
#      run: mvn -B verify --file ${{ matrix.tck }}/pom.xml
#    - name: Upload artifact
#      uses: actions/upload-artifact@v3
#      if: always() # always run even if the previous step fails
#      with:
#        name: my-artifact
#        path: |
#          **/TEST-*.xml
#    - name: JUnit Report Action
#      uses: mikepenz/action-junit-report@v3.5.2
#      if: always() # always run even if the previous step fails
#      with:
#        report_paths: '**/target/test-reports/**/TEST-*.xml'
